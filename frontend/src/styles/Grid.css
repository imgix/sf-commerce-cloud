.ix-grid-container {
  min-height: 100%;
  padding: 32px 16px;
  box-sizing: border-box;
  background-color: #eef0f2;
}

.ix-grid {
  /** 
   * Have the grid automatically resize itself to fill its container _and_
   * have the grid automatically resize its columns to fill the grid.
   *
   * Based off of this excellent article:
   * https://css-tricks.com/an-auto-filling-css-grid-with-max-columns/
   */

  /**
   * User input values.
   */

  --grid-layout-gap: 10px;
  --grid-column-count: 14;
  --grid-item--min-width: 134px;

  /**
   * Calculated values.
   */

  /* gapCount = columnCount - 1 */
  --gap-count: calc(var(--grid-column-count) - 1);
  /* totalGapWidth = gapCount * gapSize */
  --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
  /* gridItemMaxWidth = (containerWidth - gapWidth) / columnCount */
  --grid-item--max-width: calc(
    (100% - var(--total-gap-width)) / var(--grid-column-count)
  );

  display: grid;
  grid-template-columns: repeat(
    /* fill available columns without stretching the grid item */ auto-fill,
    /* 
     * gridItemWidth = max(minWidth, gridItemMaxWidth)
     * gridColumnSize = minmax(gridItemWidth, 1 fraction of the available space)
     *
     * Where `minmax` returns size range greater than or equal to min and less
     * than or equal to max. In this case, the grid item is constrained to be
      * at least `gridItemWidth` and at most `1fr`.
     */
      minmax(max(var(--grid-item--min-width), var(--grid-item--max-width)), 1fr)
  );
  grid-gap: var(--grid-layout-gap);
}

.ix-grid-item {
  background: #fff;
  cursor: pointer;
  border-radius: 2px;
  overflow: hidden;
  max-height: 340px;
  max-width: 340px;
  border-radius: 4px;
}

.ix-grid-item:hover {
  box-shadow: 0 0 0 2px rgba(0, 191, 254, 0.4);
}

.ix-grid-item-selected {
  box-shadow: 0 0 0 2px #00bffe;
}

.ix-grid-item-selected:hover {
  box-shadow: 0 0 0 2px #00bffe;
}

.ix-grid-item-image {
  position: relative;
  overflow: hidden;
  height: 180px;
}

.ix-grid-item-image img {
  display: block;
  object-fit: cover;
  width: 100%;
  height: 100%;
}

.ix-grid-item-filename {
  display: flex;
  justify-content: flex-end;
  flex: 0 1 auto;
  font-size: 0.875rem; /* 14px */
  line-height: 2rem;
  color: #6c7f8e;
  font-style: normal;
  font-weight: normal;
  /* This supports the "ellipsis" behaviour to ensure that the filename stays on
   * one line */
  white-space: nowrap;
  position: relative;
  padding: 6px 10px;
  margin: 0px;

  text-align: center;
}

.ix-grid-item-filename:before {
  content: " ";
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 20px;
  background: linear-gradient(90deg, #fff 25%, #fff);
  background: linear-gradient(90deg, #fff 25%, hsla(0, 0%, 100%, 0));
}
